using Microsoft.AspNetCore.Mvc;

namespace web.Controllers
{
    /// <summary>
    /// Controller to handle greeting requests.
    /// Generated by CoPilot
    /// </summary>
    [ApiController]
    [Route("[controller]")]
    public class GreetController : ControllerBase
    {
        /// <summary>
        /// Greets the user by username with a random greeting.
        /// Generated by CoPilot
        /// </summary>
        /// <param name="username">The username to greet.</param>
        /// <returns>A random greeting message.</returns>
        [HttpGet]
        public IActionResult Get([FromQuery] string username)
        {
            if (string.IsNullOrWhiteSpace(username))
            {
                return BadRequest("Username is required.");
            }
            // Generated by CoPilot
            // Returns a random greeting message, prepended with 'Have a nice day'
            var greetings = new[]
            {
                $"Hello, {username}! Welcome to the .NET Core API.",
                $"Hi, {username}! Hope you have a great day!",
                $"Greetings, {username}! Enjoy your time here.",
                $"Hey, {username}! Nice to see you!",
                $"Salutations, {username}! How can we help you today?"
            };
            var random = new Random();
            var message = greetings[random.Next(greetings.Length)];
            var finalMessage = $"Have a nice day. {message}";
            return Ok(new { greeting = finalMessage });
        }

        /// <summary>
        /// Gets a random weather description.
        /// Generated by CoPilot
        /// </summary>
        /// <returns>A random weather description.</returns>
        [HttpGet("weather")]
        public IActionResult GetRandomWeather()
        {
            // Generated by CoPilot
            // Returns a random weather description
            var weatherDescriptions = new[]
            {
                "Sunny",
                "Cloudy",
                "Rainy",
                "Windy",
                "Stormy",
                "Foggy",
                "Snowy",
                "Hot",
                "Cold",
                "Humid"
            };
            var random = new Random();
            var description = weatherDescriptions[random.Next(weatherDescriptions.Length)];
            return Ok(new { weather = description });
        }
    }
}
